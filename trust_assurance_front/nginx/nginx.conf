worker_processes 4;

events {
  worker_connections 1024;
}

http {
  # Inclusion of Content-Type of files (ex: css and js) in response header
  include mime.types;

  proxy_read_timeout 1800;
  proxy_connect_timeout 1800;
  proxy_send_timeout 1800;

  # server {
  #   listen 80;

  #   # disable access log
  #   access_log off;
  #   # disable error log
  #   error_log off;

  #   client_max_body_size 70M;

  #   # Proxy for backend API
  #   location / {
  #       proxy_set_header X-Real-IP $remote_addr;
  #       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  #       proxy_set_header Host $host;
  #       proxy_pass http://nodes;
  #   }
  # }

  server {
    listen 443 ssl;
    listen [::]:443 ssl;

    # disable access log
    access_log on;
    # disable error log
    error_log on;

    client_max_body_size 70M;

    ssl_certificate /home/domain.crt;
    ssl_certificate_key /home/domain.key;

    #ssl_session_timeout  5m;

    ssl_protocols  SSLv2 SSLv3 TLSv1.2 TLSv1.3;
    ssl_ciphers  ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;
    ssl_prefer_server_ciphers   on;


    # ssl_protocols TLSv1.2;
    # ssl_prefer_server_ciphers on;
    # ssl_dhparam /etc/ssl/certs/dhparam.pem;
    # ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
    # ssl_ecdh_curve secp384r1; # Requires nginx >= 1.1.0
    # ssl_session_timeout 10m;
    # ssl_session_cache shared:SSL:10m;
    # ssl_session_tickets off; # Requires nginx >= 1.5.9
    # # ssl_stapling on; # Requires nginx >= 1.3.7
    # # ssl_stapling_verify on; # Requires nginx => 1.3.7
    # resolver 8.8.8.8 8.8.4.4 valid=300s;
    # resolver_timeout 5s;
    # add_header X-Frame-Options DENY;
    # add_header X-Content-Type-Options nosniff;
    # add_header X-XSS-Protection "1; mode=block";

    # Proxy for backend API
    location / {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_pass http://nodes;
    }
  }

  upstream nodes {
    server nextjs_server:3000;
  }
}
